import{S as Dk,i as Ik,s as Ok,k as a,r as o,a as i,l as t,m as n,u as l,h as s,c as u,p as c,b as d,D as e,n as $f}from"./index.ebb164e0.js";function Tk(gk){let ue,vc,Dl,_s,kc,Il,Ns,_c,Ol,Ps,K,Nc,Re,Pc,Sc,Fo,Ac,bc,Tl,fe,wc,Ve,Ho,mc,yc,Ll,Ss,Cc,Gl,As,gc,jl,Ee,Dc,Wo,Ic,Oc,Jl,V,Tc,Yo,Lc,Gc,Qo,jc,Jc,xl,he,Be,bs,xc,ws,Me,ms,Rc,ys,Vc,Cs,U,gs,Ds,Bc,L,Mc,Is,qc,Os,Fc,Hc,Ts,Wc,Ls,Yc,B,Qc,Gs,zc,js,Xc,Kc,Js,Uc,xs,Rs,Zc,Rl,Vs,$c,Vl,ve,qe,Bs,er,Ms,Fe,qs,sr,Fs,ar,Hs,D,Ws,Ys,tr,Qs,He,We,zs,nr,or,Xs,lr,Ye,cr,M,Qe,Ks,rr,pr,dr,Us,ir,Z,Zs,ur,$s,fr,Er,ea,hr,sa,vr,$,kr,ze,Xe,aa,_r,Nr,ta,Pr,Sr,Ke,Ue,na,Ar,br,oa,wr,Ze,mr,$e,es,la,yr,Cr,ca,gr,ra,ss,as,pa,Dr,Ir,da,Or,ia,ua,Tr,Bl,fa,Lr,Ml,Ea,Gr,ql,ke,ts,ha,jr,zo,va,q,ee,ka,Jr,xr,_e,Rr,_a,Vr,Br,Na,Mr,Xo,se,Pa,qr,Fr,Sa,Hr,Aa,Wr,Ko,ae,ba,Yr,Qr,F,zr,wa,Xr,Kr,ma,Ur,Zr,ya,$r,Fl,Ne,ns,Ca,ep,ga,os,Da,sp,Ia,ap,Oa,G,f,Ta,tp,np,La,op,lp,Ga,cp,ja,rp,Ja,pp,dp,xa,ip,Ra,up,Va,fp,Ba,Ep,Ma,hp,qa,vp,Fa,kp,Uo,b,Ha,Wa,_p,Np,Ya,Pp,Sp,Qa,Ap,ls,za,bp,Pe,Xa,wp,Ka,mp,Ua,yp,Za,Cp,$a,gp,et,Dp,st,Ip,y,Op,at,Tp,Lp,tt,Gp,cs,nt,jp,Se,ot,Jp,lt,xp,ct,Rp,rt,Vp,pt,Bp,dt,Mp,it,qp,Zo,E,ut,Fp,Hp,ft,Wp,Yp,Et,ht,Qp,zp,vt,Xp,Kp,kt,Up,Zp,_t,$p,Nt,ed,sd,Pt,ad,St,td,Hl,At,nd,Wl,bt,od,Yl,H,ld,wt,cd,rd,$o,pd,dd,Ql,Ae,rs,mt,id,el,yt,j,te,Ct,ud,fd,be,Ed,gt,hd,vd,Dt,kd,ne,It,_d,Nd,W,Pd,Ot,Sd,Ad,Tt,bd,wd,Lt,md,sl,oe,Gt,yd,Cd,jt,gd,Jt,Dd,al,le,xt,Id,Od,we,Td,Rt,Ld,Gd,Vt,jd,zl,me,ps,Bt,Jd,Mt,ds,qt,xd,Ft,Rd,Ht,I,Wt,Yt,Vd,N,Qt,Bd,Md,zt,qd,Fd,Xt,Hd,Wd,Kt,Yd,Ut,Qd,Zt,zd,Xd,$t,Kd,en,sn,Ud,k,Zd,an,$d,ei,tn,si,nn,ai,on,ti,ln,ni,cn,oi,rn,li,pn,ci,dn,ri,un,pi,fn,di,is,ii,En,ui,w,fi,hn,Ei,hi,vn,vi,kn,ki,_n,_i,Nn,Ni,Pn,Pi,Sn,Si,An,Ai,bn,wn,bi,Xl,mn,wi,Kl,ye,yn,Cn,mi,gn,us,Dn,In,yi,_,On,Ci,Tn,gi,Di,Ln,Ii,Gn,Oi,jn,Ti,Jn,Li,xn,Gi,Rn,ji,Vn,Ji,Bn,xi,Mn,Ri,qn,Vi,Ul,Y,Bi,Fn,Mi,qi,Hn,Fi,Hi,Zl,Ce,fs,Wn,Wi,tl,Yn,O,ce,Qn,Yi,Qi,zn,zi,Xn,Xi,re,Kn,Ki,Ui,ge,Zi,Un,$i,eu,Zn,su,pe,$n,au,tu,Q,nu,eo,ou,lu,so,cu,ru,ao,pu,nl,de,to,du,iu,no,uu,oo,fu,ol,ie,lo,Eu,hu,De,vu,co,ku,_u,ro,Nu,$l,Ie,po,io,Pu,uo,z,fo,Eo,Su,Oe,Au,ho,bu,wu,J,mu,vo,yu,ko,Cu,_o,gu,Du,No,Iu,v,Ou,Po,Tu,So,Lu,Ao,Gu,bo,ju,wo,Ju,xu,mo,Ru,Vu,yo,Bu,Mu,Co,qu,Fu,go,Hu,Te,Wu,Do,Yu,Io,Qu,ec,h,zu,ll,Xu,Ku,cl,Uu,Zu,rl,$u,ef,pl,sf,af,dl,tf,nf,il,of,lf,ul,cf,rf,sc,Le,pf,fl,df,uf,ac,Ge,ff,Oo,Ef,hf;return{c(){ue=a("h1"),vc=o("Getting Started: Developing the bot"),Dl=i(),_s=a("h2"),kc=o("Installing Guilded.NET"),Il=i(),Ns=a("p"),_c=o("First of all, create a new project. Guilded.NET works with any template."),Ol=i(),Ps=a("blockquote"),K=a("p"),Nc=o("Guilded.NET offers installable MSBuild templates, which can be found "),Re=a("a"),Pc=o("here"),Sc=o(". Just be sure to edit the "),Fo=a("q"),Ac=o("config/config.json"),bc=o(" file and insert your token."),Tl=i(),fe=a("p"),wc=o("Install Guilded.NET by typing "),Ve=a("a"),Ho=a("code"),mc=o("dotnet add package Guilded.NET"),yc=o(" and Guilded.NET dependency should be added to your project. Now we’ll need to run your bot."),Ll=i(),Ss=a("h2"),Cc=o("Configuring your bot"),Gl=i(),As=a("p"),gc=o("Now we’ll need to define prefix and an authentication token for your bot. You can use either constants or configuration files for that, but we’ll use a configuration file."),jl=i(),Ee=a("p"),Dc=o("The name of the directory, the file and even properties in the file can be whatever you want to name it, but make sure it is referenced in your code. We’ll use "),Wo=a("q"),Ic=o("config/config.json"),Oc=o(" in this documentation."),Jl=i(),V=a("p"),Tc=o("In your config file, create a property "),Yo=a("code"),Lc=o("auth"),Gc=o(" and property "),Qo=a("code"),jc=o("prefix"),Jc=o(", where your authentication token and prefix will be stored:"),xl=i(),he=a("div"),Be=a("header"),bs=a("div"),xc=o("JSON"),ws=a("section"),Me=a("div"),ms=a("span"),Rc=o("File: "),ys=a("span"),Vc=o("config/config.json"),Cs=a("pre"),U=a("code"),gs=a("codeline"),Ds=a("span"),Bc=o("{"),L=a("codeline"),Mc=o("    "),Is=a("span"),qc=o('"auth"'),Os=a("span"),Fc=o(":"),Hc=o(" "),Ts=a("span"),Wc=o('"authentication_credentials_here"'),Ls=a("span"),Yc=o(","),B=a("codeline"),Qc=o("    "),Gs=a("span"),zc=o('"prefix"'),js=a("span"),Xc=o(":"),Kc=o(" "),Js=a("span"),Uc=o('"!"'),xs=a("codeline"),Rs=a("span"),Zc=o("}"),Rl=i(),Vs=a("p"),$c=o("Be sure to make MSBuild not ignore your config folder in your project file:"),Vl=i(),ve=a("div"),qe=a("header"),Bs=a("div"),er=o("XML"),Ms=a("section"),Fe=a("div"),qs=a("span"),sr=o("File: "),Fs=a("span"),ar=o("ProjectName.csproj"),Hs=a("pre"),D=a("code"),Ws=a("codeline"),Ys=a("span"),tr=o("<!-- ... Other stuff ... -->"),Qs=a("codeline"),He=a("span"),We=a("span"),zs=a("span"),nr=o("<"),or=o("ItemGroup"),Xs=a("span"),lr=o(">"),Ye=a("codeline"),cr=o("    "),M=a("span"),Qe=a("span"),Ks=a("span"),rr=o("<"),pr=o("Content"),dr=o(" "),Us=a("span"),ir=o("Include"),Z=a("span"),Zs=a("span"),ur=o("="),$s=a("span"),fr=o('"'),Er=o("config/*"),ea=a("span"),hr=o('"'),sa=a("span"),vr=o(">"),$=a("codeline"),kr=o("        "),ze=a("span"),Xe=a("span"),aa=a("span"),_r=o("<"),Nr=o("CopyToOutputDirectory"),ta=a("span"),Pr=o(">"),Sr=o("Always"),Ke=a("span"),Ue=a("span"),na=a("span"),Ar=o("</"),br=o("CopyToOutputDirectory"),oa=a("span"),wr=o(">"),Ze=a("codeline"),mr=o("    "),$e=a("span"),es=a("span"),la=a("span"),yr=o("</"),Cr=o("Content"),ca=a("span"),gr=o(">"),ra=a("codeline"),ss=a("span"),as=a("span"),pa=a("span"),Dr=o("</"),Ir=o("ItemGroup"),da=a("span"),Or=o(">"),ia=a("codeline"),ua=a("span"),Tr=o("<!-- ... Other stuff ... -->"),Bl=i(),fa=a("p"),Lr=o("We now have a configuration file that we can safely reference in our code and use properties in it. You can use either System.Text.Json or Newtonsoft.Json to deserialize our JSON and get its values. For this tutorial, we are going to use Newtonsoft.Json, since Guilded.NET has Newtonsoft.Json as a dependency. Newtonsoft.Json will be removed as a dependency in the future, so if you’ll still want to use Newtonsoft.Json, it is recommended to add Newtonsoft.Json as a dependency in your project."),Ml=i(),Ea=a("p"),Gr=o("We are now going to get the configuration and use it in our bot:"),ql=i(),ke=a("div"),ts=a("header"),ha=a("div"),jr=o("C#"),zo=a("section"),va=a("pre"),q=a("code"),ee=a("codeline"),ka=a("span"),Jr=o("using"),xr=o(" "),_e=a("span"),Rr=o("System"),_a=a("span"),Vr=o("."),Br=o("IO"),Na=a("span"),Mr=o(";"),Xo=a("codeline"),se=a("codeline"),Pa=a("span"),qr=o("using"),Fr=o(" "),Sa=a("span"),Hr=o("Guilded"),Aa=a("span"),Wr=o(";"),Ko=a("codeline"),ae=a("codeline"),ba=a("span"),Yr=o("using"),Qr=o(" "),F=a("span"),zr=o("Newtonsoft"),wa=a("span"),Xr=o("."),Kr=o("Json"),ma=a("span"),Ur=o("."),Zr=o("Linq"),ya=a("span"),$r=o(";"),Fl=i(),Ne=a("div"),ns=a("header"),Ca=a("div"),ep=o("C#"),ga=a("section"),os=a("div"),Da=a("span"),sp=o("File: "),Ia=a("span"),ap=o("Program.cs"),Oa=a("pre"),G=a("code"),f=a("codeline"),Ta=a("span"),tp=o("JObject"),np=o(" config "),La=a("span"),op=o("="),lp=o(" JObject"),Ga=a("span"),cp=o("."),ja=a("span"),rp=o("Parse"),Ja=a("span"),pp=o("("),dp=o("File"),xa=a("span"),ip=o("."),Ra=a("span"),up=o("ReadAllText"),Va=a("span"),fp=o("("),Ba=a("span"),Ep=o('"./config/config.json"'),Ma=a("span"),hp=o(")"),qa=a("span"),vp=o(")"),Fa=a("span"),kp=o(";"),Uo=a("codeline"),b=a("codeline"),Ha=a("span"),Wa=a("span"),_p=o("string"),Np=o(" auth   "),Ya=a("span"),Pp=o("="),Sp=o(" config"),Qa=a("span"),Ap=o("."),ls=a("span"),za=a("span"),bp=o("Value"),Pe=a("span"),Xa=a("span"),wp=o("<"),Ka=a("span"),mp=o("string"),Ua=a("span"),yp=o(">"),Za=a("span"),Cp=o("("),$a=a("span"),gp=o('"auth"'),et=a("span"),Dp=o(")"),st=a("span"),Ip=o(","),y=a("codeline"),Op=o("       prefix "),at=a("span"),Tp=o("="),Lp=o(" config"),tt=a("span"),Gp=o("."),cs=a("span"),nt=a("span"),jp=o("Value"),Se=a("span"),ot=a("span"),Jp=o("<"),lt=a("span"),xp=o("string"),ct=a("span"),Rp=o(">"),rt=a("span"),Vp=o("("),pt=a("span"),Bp=o('"prefix"'),dt=a("span"),Mp=o(")"),it=a("span"),qp=o(";"),Zo=a("codeline"),E=a("codeline"),ut=a("span"),Fp=o("await"),Hp=o(" "),ft=a("span"),Wp=o("using"),Yp=o(" "),Et=a("span"),ht=a("span"),Qp=o("var"),zp=o(" client "),vt=a("span"),Xp=o("="),Kp=o(" "),kt=a("span"),Up=o("new"),Zp=o(" "),_t=a("span"),$p=o("GuildedBotClient"),Nt=a("span"),ed=o("("),sd=o("auth"),Pt=a("span"),ad=o(")"),St=a("span"),td=o(";"),Hl=i(),At=a("p"),nd=o("You can now run your project, but as we can see, it doesn’t really do anything. But that’s because we are only creating our bot, not connecting to Guilded yet, which we are going to do in the next section."),Wl=i(),bt=a("h2"),od=o("Connecting to Guilded"),Yl=i(),H=a("p"),ld=o("Method "),wt=a("a"),cd=o("ConnectAsync"),rd=o(" is used to connect the client to Guilded. But once you use it, the bot will connect to Guilded and program will close seeing that it’s done. One of the ways to stop it from closing is to use "),$o=a("code"),pd=o("await Task.Delay(-1)"),dd=o(":"),Ql=i(),Ae=a("div"),rs=a("header"),mt=a("div"),id=o("C#"),el=a("section"),yt=a("pre"),j=a("code"),te=a("codeline"),Ct=a("span"),ud=o("using"),fd=o(" "),be=a("span"),Ed=o("System"),gt=a("span"),hd=o("."),vd=o("IO"),Dt=a("span"),kd=o(";"),ne=a("codeline"),It=a("span"),_d=o("using"),Nd=o(" "),W=a("span"),Pd=o("System"),Ot=a("span"),Sd=o("."),Ad=o("Threading"),Tt=a("span"),bd=o("."),wd=o("Tasks"),Lt=a("span"),md=o(";"),sl=a("codeline"),oe=a("codeline"),Gt=a("span"),yd=o("using"),Cd=o(" "),jt=a("span"),gd=o("Guilded"),Jt=a("span"),Dd=o(";"),al=a("codeline"),le=a("codeline"),xt=a("span"),Id=o("using"),Od=o(" "),we=a("span"),Td=o("Newtonsoft"),Rt=a("span"),Ld=o("."),Gd=o("Json"),Vt=a("span"),jd=o(";"),zl=i(),me=a("div"),ps=a("header"),Bt=a("div"),Jd=o("C#"),Mt=a("section"),ds=a("div"),qt=a("span"),xd=o("File: "),Ft=a("span"),Rd=o("Program.cs"),Ht=a("pre"),I=a("code"),Wt=a("codeline"),Yt=a("span"),Vd=o("// Below static void Main()"),N=a("codeline"),Qt=a("span"),Bd=o("static"),Md=o(" "),zt=a("span"),qd=o("async"),Fd=o(" "),Xt=a("span"),Hd=o("Task"),Wd=o(" "),Kt=a("span"),Yd=o("RunAsync"),Ut=a("span"),Qd=o("("),Zt=a("span"),zd=o("GuildedBotClient"),Xd=o(" client"),$t=a("span"),Kd=o(")"),en=a("codeline"),sn=a("span"),Ud=o("{"),k=a("codeline"),Zd=o("    "),an=a("span"),$d=o("await"),ei=o(" client"),tn=a("span"),si=o("."),nn=a("span"),ai=o("ConnectAsync"),on=a("span"),ti=o("("),ln=a("span"),ni=o(")"),cn=a("span"),oi=o("."),rn=a("span"),li=o("ConfigureAwait"),pn=a("span"),ci=o("("),dn=a("span"),ri=o("false"),un=a("span"),pi=o(")"),fn=a("span"),di=o(";"),is=a("codeline"),ii=o("    "),En=a("span"),ui=o("// Stop program from closing"),w=a("codeline"),fi=o("    "),hn=a("span"),Ei=o("await"),hi=o(" Task"),vn=a("span"),vi=o("."),kn=a("span"),ki=o("Delay"),_n=a("span"),_i=o("("),Nn=a("span"),Ni=o("-"),Pn=a("span"),Pi=o("1"),Sn=a("span"),Si=o(")"),An=a("span"),Ai=o(";"),bn=a("codeline"),wn=a("span"),bi=o("}"),Xl=i(),mn=a("p"),wi=o("Now we can reference it in Main method:"),Kl=i(),ye=a("div"),yn=a("header"),Cn=a("div"),mi=o("C#"),gn=a("pre"),us=a("code"),Dn=a("codeline"),In=a("span"),yi=o("// static void Main()"),_=a("codeline"),On=a("span"),Ci=o("RunAsync"),Tn=a("span"),gi=o("("),Di=o("client"),Ln=a("span"),Ii=o(")"),Gn=a("span"),Oi=o("."),jn=a("span"),Ti=o("GetAwaiter"),Jn=a("span"),Li=o("("),xn=a("span"),Gi=o(")"),Rn=a("span"),ji=o("."),Vn=a("span"),Ji=o("GetResult"),Bn=a("span"),xi=o("("),Mn=a("span"),Ri=o(")"),qn=a("span"),Vi=o(";"),Ul=i(),Y=a("p"),Bi=o("To see if connection between Guilded and the client are initiated, we can subscribe to "),Fn=a("a"),Mi=o("Prepared"),qi=o(" or "),Hn=a("a"),Fi=o("Connected"),Hi=o(" events:"),Zl=i(),Ce=a("div"),fs=a("header"),Wn=a("div"),Wi=o("C#"),tl=a("section"),Yn=a("pre"),O=a("code"),ce=a("codeline"),Qn=a("span"),Yi=o("using"),Qi=o(" "),zn=a("span"),zi=o("System"),Xn=a("span"),Xi=o(";"),re=a("codeline"),Kn=a("span"),Ki=o("using"),Ui=o(" "),ge=a("span"),Zi=o("System"),Un=a("span"),$i=o("."),eu=o("IO"),Zn=a("span"),su=o(";"),pe=a("codeline"),$n=a("span"),au=o("using"),tu=o(" "),Q=a("span"),nu=o("System"),eo=a("span"),ou=o("."),lu=o("Threading"),so=a("span"),cu=o("."),ru=o("Tasks"),ao=a("span"),pu=o(";"),nl=a("codeline"),de=a("codeline"),to=a("span"),du=o("using"),iu=o(" "),no=a("span"),uu=o("Guilded"),oo=a("span"),fu=o(";"),ol=a("codeline"),ie=a("codeline"),lo=a("span"),Eu=o("using"),hu=o(" "),De=a("span"),vu=o("Newtonsoft"),co=a("span"),ku=o("."),_u=o("Json"),ro=a("span"),Nu=o(";"),$l=i(),Ie=a("div"),po=a("header"),io=a("div"),Pu=o("C#"),uo=a("pre"),z=a("code"),fo=a("codeline"),Eo=a("span"),Su=o("// Below `await using GuildedBotClient client = ...;`"),Oe=a("codeline"),Au=o("client"),ho=a("span"),bu=o("."),wu=o("Prepared"),J=a("codeline"),mu=o("      "),vo=a("span"),yu=o("."),ko=a("span"),Cu=o("Subscribe"),_o=a("span"),gu=o("("),Du=o("me "),No=a("span"),Iu=o("=>"),v=a("codeline"),Ou=o("          Console"),Po=a("span"),Tu=o("."),So=a("span"),Lu=o("WriteLine"),Ao=a("span"),Gu=o("("),bo=a("span"),ju=o('"The bot is prepared.\\nLogged in as \\"{0}\\" with the ID \\"{1}\\""'),wo=a("span"),Ju=o(","),xu=o(" me"),mo=a("span"),Ru=o("."),Vu=o("Name"),yo=a("span"),Bu=o(","),Mu=o(" me"),Co=a("span"),qu=o("."),Fu=o("Id"),go=a("span"),Hu=o(")"),Te=a("codeline"),Wu=o("      "),Do=a("span"),Yu=o(")"),Io=a("span"),Qu=o(";"),ec=i(),h=a("p"),zu=o("The main difference is that "),ll=a("code"),Xu=o("Connected"),Ku=o(" gets connected once the bot is online and can be functional, while "),cl=a("code"),Uu=o("Prepared"),Zu=o(" is called once the bot is connected and gets additional information, such as "),rl=a("code"),$u=o("client.Me"),ef=o(". If "),pl=a("code"),sf=o("Connected"),af=o(" gets called before "),dl=a("code"),tf=o("Prepared"),nf=o(", the "),il=a("code"),of=o("client.Me"),lf=o(" property will always be "),ul=a("code"),cf=o("null"),rf=o("."),sc=i(),Le=a("p"),pf=o("Once the bot successfully connects and does everything it needs, you will be able to see "),fl=a("q"),df=o("The bot is prepared."),uf=o(" in the console."),ac=i(),Ge=a("p"),ff=o("The bot won’t do anything apart from connecting to Guilded. In "),Oo=a("a"),Ef=o("Powering up the bot"),hf=o(" document, we are going to give functionality to our bot with text commands."),this.h()},l(r){ue=t(r,"H1",{});var p=n(ue);vc=l(p,"Getting Started: Developing the bot"),p.forEach(s),Dl=u(r),_s=t(r,"H2",{});var e1=n(_s);kc=l(e1,"Installing Guilded.NET"),e1.forEach(s),Il=u(r),Ns=t(r,"P",{});var s1=n(Ns);_c=l(s1,"First of all, create a new project. Guilded.NET works with any template."),s1.forEach(s),Ol=u(r),Ps=t(r,"BLOCKQUOTE",{});var a1=n(Ps);K=t(a1,"P",{});var To=n(K);Nc=l(To,"Guilded.NET offers installable MSBuild templates, which can be found "),Re=t(To,"A",{href:!0,rel:!0});var t1=n(Re);Pc=l(t1,"here"),t1.forEach(s),Sc=l(To,". Just be sure to edit the "),Fo=t(To,"Q",{});var n1=n(Fo);Ac=l(n1,"config/config.json"),n1.forEach(s),bc=l(To," file and insert your token."),To.forEach(s),a1.forEach(s),Tl=u(r),fe=t(r,"P",{});var tc=n(fe);wc=l(tc,"Install Guilded.NET by typing "),Ve=t(tc,"A",{href:!0,rel:!0});var o1=n(Ve);Ho=t(o1,"CODE",{});var l1=n(Ho);mc=l(l1,"dotnet add package Guilded.NET"),l1.forEach(s),o1.forEach(s),yc=l(tc," and Guilded.NET dependency should be added to your project. Now we’ll need to run your bot."),tc.forEach(s),Ll=u(r),Ss=t(r,"H2",{});var c1=n(Ss);Cc=l(c1,"Configuring your bot"),c1.forEach(s),Gl=u(r),As=t(r,"P",{});var r1=n(As);gc=l(r1,"Now we’ll need to define prefix and an authentication token for your bot. You can use either constants or configuration files for that, but we’ll use a configuration file."),r1.forEach(s),jl=u(r),Ee=t(r,"P",{});var nc=n(Ee);Dc=l(nc,"The name of the directory, the file and even properties in the file can be whatever you want to name it, but make sure it is referenced in your code. We’ll use "),Wo=t(nc,"Q",{});var p1=n(Wo);Ic=l(p1,"config/config.json"),p1.forEach(s),Oc=l(nc," in this documentation."),nc.forEach(s),Jl=u(r),V=t(r,"P",{});var Lo=n(V);Tc=l(Lo,"In your config file, create a property "),Yo=t(Lo,"CODE",{});var d1=n(Yo);Lc=l(d1,"auth"),d1.forEach(s),Gc=l(Lo," and property "),Qo=t(Lo,"CODE",{});var i1=n(Qo);jc=l(i1,"prefix"),i1.forEach(s),Jc=l(Lo,", where your authentication token and prefix will be stored:"),Lo.forEach(s),xl=u(r),he=t(r,"DIV",{class:!0});var vf=n(he);Be=t(vf,"HEADER",{class:!0});var kf=n(Be);bs=t(kf,"DIV",{class:!0});var u1=n(bs);xc=l(u1,"JSON"),u1.forEach(s),ws=t(kf,"SECTION",{class:!0});var f1=n(ws);Me=t(f1,"DIV",{class:!0});var _f=n(Me);ms=t(_f,"SPAN",{class:!0});var E1=n(ms);Rc=l(E1,"File: "),E1.forEach(s),ys=t(_f,"SPAN",{class:!0});var h1=n(ys);Vc=l(h1,"config/config.json"),h1.forEach(s),_f.forEach(s),f1.forEach(s),kf.forEach(s),Cs=t(vf,"PRE",{class:!0});var v1=n(Cs);U=t(v1,"CODE",{class:!0});var El=n(U);gs=t(El,"CODELINE",{class:!0});var k1=n(gs);Ds=t(k1,"SPAN",{class:!0});var _1=n(Ds);Bc=l(_1,"{"),_1.forEach(s),k1.forEach(s),L=t(El,"CODELINE",{class:!0});var Es=n(L);Mc=l(Es,"    "),Is=t(Es,"SPAN",{class:!0});var N1=n(Is);qc=l(N1,'"auth"'),N1.forEach(s),Os=t(Es,"SPAN",{class:!0});var P1=n(Os);Fc=l(P1,":"),P1.forEach(s),Hc=l(Es," "),Ts=t(Es,"SPAN",{class:!0});var S1=n(Ts);Wc=l(S1,'"authentication_credentials_here"'),S1.forEach(s),Ls=t(Es,"SPAN",{class:!0});var A1=n(Ls);Yc=l(A1,","),A1.forEach(s),Es.forEach(s),B=t(El,"CODELINE",{class:!0});var Go=n(B);Qc=l(Go,"    "),Gs=t(Go,"SPAN",{class:!0});var b1=n(Gs);zc=l(b1,'"prefix"'),b1.forEach(s),js=t(Go,"SPAN",{class:!0});var w1=n(js);Xc=l(w1,":"),w1.forEach(s),Kc=l(Go," "),Js=t(Go,"SPAN",{class:!0});var m1=n(Js);Uc=l(m1,'"!"'),m1.forEach(s),Go.forEach(s),xs=t(El,"CODELINE",{class:!0});var y1=n(xs);Rs=t(y1,"SPAN",{class:!0});var C1=n(Rs);Zc=l(C1,"}"),C1.forEach(s),y1.forEach(s),El.forEach(s),v1.forEach(s),vf.forEach(s),Rl=u(r),Vs=t(r,"P",{});var g1=n(Vs);$c=l(g1,"Be sure to make MSBuild not ignore your config folder in your project file:"),g1.forEach(s),Vl=u(r),ve=t(r,"DIV",{class:!0});var Nf=n(ve);qe=t(Nf,"HEADER",{class:!0});var Pf=n(qe);Bs=t(Pf,"DIV",{class:!0});var D1=n(Bs);er=l(D1,"XML"),D1.forEach(s),Ms=t(Pf,"SECTION",{class:!0});var I1=n(Ms);Fe=t(I1,"DIV",{class:!0});var Sf=n(Fe);qs=t(Sf,"SPAN",{class:!0});var O1=n(qs);sr=l(O1,"File: "),O1.forEach(s),Fs=t(Sf,"SPAN",{class:!0});var T1=n(Fs);ar=l(T1,"ProjectName.csproj"),T1.forEach(s),Sf.forEach(s),I1.forEach(s),Pf.forEach(s),Hs=t(Nf,"PRE",{class:!0});var L1=n(Hs);D=t(L1,"CODE",{class:!0});var je=n(D);Ws=t(je,"CODELINE",{class:!0});var G1=n(Ws);Ys=t(G1,"SPAN",{class:!0});var j1=n(Ys);tr=l(j1,"<!-- ... Other stuff ... -->"),j1.forEach(s),G1.forEach(s),Qs=t(je,"CODELINE",{class:!0});var J1=n(Qs);He=t(J1,"SPAN",{class:!0});var Af=n(He);We=t(Af,"SPAN",{class:!0});var bf=n(We);zs=t(bf,"SPAN",{class:!0});var x1=n(zs);nr=l(x1,"<"),x1.forEach(s),or=l(bf,"ItemGroup"),bf.forEach(s),Xs=t(Af,"SPAN",{class:!0});var R1=n(Xs);lr=l(R1,">"),R1.forEach(s),Af.forEach(s),J1.forEach(s),Ye=t(je,"CODELINE",{class:!0});var wf=n(Ye);cr=l(wf,"    "),M=t(wf,"SPAN",{class:!0});var jo=n(M);Qe=t(jo,"SPAN",{class:!0});var mf=n(Qe);Ks=t(mf,"SPAN",{class:!0});var V1=n(Ks);rr=l(V1,"<"),V1.forEach(s),pr=l(mf,"Content"),mf.forEach(s),dr=l(jo," "),Us=t(jo,"SPAN",{class:!0});var B1=n(Us);ir=l(B1,"Include"),B1.forEach(s),Z=t(jo,"SPAN",{class:!0});var hl=n(Z);Zs=t(hl,"SPAN",{class:!0});var M1=n(Zs);ur=l(M1,"="),M1.forEach(s),$s=t(hl,"SPAN",{class:!0});var q1=n($s);fr=l(q1,'"'),q1.forEach(s),Er=l(hl,"config/*"),ea=t(hl,"SPAN",{class:!0});var F1=n(ea);hr=l(F1,'"'),F1.forEach(s),hl.forEach(s),sa=t(jo,"SPAN",{class:!0});var H1=n(sa);vr=l(H1,">"),H1.forEach(s),jo.forEach(s),wf.forEach(s),$=t(je,"CODELINE",{class:!0});var vl=n($);kr=l(vl,"        "),ze=t(vl,"SPAN",{class:!0});var yf=n(ze);Xe=t(yf,"SPAN",{class:!0});var Cf=n(Xe);aa=t(Cf,"SPAN",{class:!0});var W1=n(aa);_r=l(W1,"<"),W1.forEach(s),Nr=l(Cf,"CopyToOutputDirectory"),Cf.forEach(s),ta=t(yf,"SPAN",{class:!0});var Y1=n(ta);Pr=l(Y1,">"),Y1.forEach(s),yf.forEach(s),Sr=l(vl,"Always"),Ke=t(vl,"SPAN",{class:!0});var gf=n(Ke);Ue=t(gf,"SPAN",{class:!0});var Df=n(Ue);na=t(Df,"SPAN",{class:!0});var Q1=n(na);Ar=l(Q1,"</"),Q1.forEach(s),br=l(Df,"CopyToOutputDirectory"),Df.forEach(s),oa=t(gf,"SPAN",{class:!0});var z1=n(oa);wr=l(z1,">"),z1.forEach(s),gf.forEach(s),vl.forEach(s),Ze=t(je,"CODELINE",{class:!0});var If=n(Ze);mr=l(If,"    "),$e=t(If,"SPAN",{class:!0});var Of=n($e);es=t(Of,"SPAN",{class:!0});var Tf=n(es);la=t(Tf,"SPAN",{class:!0});var X1=n(la);yr=l(X1,"</"),X1.forEach(s),Cr=l(Tf,"Content"),Tf.forEach(s),ca=t(Of,"SPAN",{class:!0});var K1=n(ca);gr=l(K1,">"),K1.forEach(s),Of.forEach(s),If.forEach(s),ra=t(je,"CODELINE",{class:!0});var U1=n(ra);ss=t(U1,"SPAN",{class:!0});var Lf=n(ss);as=t(Lf,"SPAN",{class:!0});var Gf=n(as);pa=t(Gf,"SPAN",{class:!0});var Z1=n(pa);Dr=l(Z1,"</"),Z1.forEach(s),Ir=l(Gf,"ItemGroup"),Gf.forEach(s),da=t(Lf,"SPAN",{class:!0});var $1=n(da);Or=l($1,">"),$1.forEach(s),Lf.forEach(s),U1.forEach(s),ia=t(je,"CODELINE",{class:!0});var eE=n(ia);ua=t(eE,"SPAN",{class:!0});var sE=n(ua);Tr=l(sE,"<!-- ... Other stuff ... -->"),sE.forEach(s),eE.forEach(s),je.forEach(s),L1.forEach(s),Nf.forEach(s),Bl=u(r),fa=t(r,"P",{});var aE=n(fa);Lr=l(aE,"We now have a configuration file that we can safely reference in our code and use properties in it. You can use either System.Text.Json or Newtonsoft.Json to deserialize our JSON and get its values. For this tutorial, we are going to use Newtonsoft.Json, since Guilded.NET has Newtonsoft.Json as a dependency. Newtonsoft.Json will be removed as a dependency in the future, so if you’ll still want to use Newtonsoft.Json, it is recommended to add Newtonsoft.Json as a dependency in your project."),aE.forEach(s),Ml=u(r),Ea=t(r,"P",{});var tE=n(Ea);Gr=l(tE,"We are now going to get the configuration and use it in our bot:"),tE.forEach(s),ql=u(r),ke=t(r,"DIV",{class:!0});var jf=n(ke);ts=t(jf,"HEADER",{class:!0});var Jf=n(ts);ha=t(Jf,"DIV",{class:!0});var nE=n(ha);jr=l(nE,"C#"),nE.forEach(s),zo=t(Jf,"SECTION",{class:!0}),n(zo).forEach(s),Jf.forEach(s),va=t(jf,"PRE",{class:!0});var oE=n(va);q=t(oE,"CODE",{class:!0});var Jo=n(q);ee=t(Jo,"CODELINE",{class:!0});var kl=n(ee);ka=t(kl,"SPAN",{class:!0});var lE=n(ka);Jr=l(lE,"using"),lE.forEach(s),xr=l(kl," "),_e=t(kl,"SPAN",{class:!0});var oc=n(_e);Rr=l(oc,"System"),_a=t(oc,"SPAN",{class:!0});var cE=n(_a);Vr=l(cE,"."),cE.forEach(s),Br=l(oc,"IO"),oc.forEach(s),Na=t(kl,"SPAN",{class:!0});var rE=n(Na);Mr=l(rE,";"),rE.forEach(s),kl.forEach(s),Xo=t(Jo,"CODELINE",{class:!0}),n(Xo).forEach(s),se=t(Jo,"CODELINE",{class:!0});var _l=n(se);Pa=t(_l,"SPAN",{class:!0});var pE=n(Pa);qr=l(pE,"using"),pE.forEach(s),Fr=l(_l," "),Sa=t(_l,"SPAN",{class:!0});var dE=n(Sa);Hr=l(dE,"Guilded"),dE.forEach(s),Aa=t(_l,"SPAN",{class:!0});var iE=n(Aa);Wr=l(iE,";"),iE.forEach(s),_l.forEach(s),Ko=t(Jo,"CODELINE",{class:!0}),n(Ko).forEach(s),ae=t(Jo,"CODELINE",{class:!0});var Nl=n(ae);ba=t(Nl,"SPAN",{class:!0});var uE=n(ba);Yr=l(uE,"using"),uE.forEach(s),Qr=l(Nl," "),F=t(Nl,"SPAN",{class:!0});var xo=n(F);zr=l(xo,"Newtonsoft"),wa=t(xo,"SPAN",{class:!0});var fE=n(wa);Xr=l(fE,"."),fE.forEach(s),Kr=l(xo,"Json"),ma=t(xo,"SPAN",{class:!0});var EE=n(ma);Ur=l(EE,"."),EE.forEach(s),Zr=l(xo,"Linq"),xo.forEach(s),ya=t(Nl,"SPAN",{class:!0});var hE=n(ya);$r=l(hE,";"),hE.forEach(s),Nl.forEach(s),Jo.forEach(s),oE.forEach(s),jf.forEach(s),Fl=u(r),Ne=t(r,"DIV",{class:!0});var xf=n(Ne);ns=t(xf,"HEADER",{class:!0});var Rf=n(ns);Ca=t(Rf,"DIV",{class:!0});var vE=n(Ca);ep=l(vE,"C#"),vE.forEach(s),ga=t(Rf,"SECTION",{class:!0});var kE=n(ga);os=t(kE,"DIV",{class:!0});var Vf=n(os);Da=t(Vf,"SPAN",{class:!0});var _E=n(Da);sp=l(_E,"File: "),_E.forEach(s),Ia=t(Vf,"SPAN",{class:!0});var NE=n(Ia);ap=l(NE,"Program.cs"),NE.forEach(s),Vf.forEach(s),kE.forEach(s),Rf.forEach(s),Oa=t(xf,"PRE",{class:!0});var PE=n(Oa);G=t(PE,"CODE",{class:!0});var hs=n(G);f=t(hs,"CODELINE",{class:!0});var P=n(f);Ta=t(P,"SPAN",{class:!0});var SE=n(Ta);tp=l(SE,"JObject"),SE.forEach(s),np=l(P," config "),La=t(P,"SPAN",{class:!0});var AE=n(La);op=l(AE,"="),AE.forEach(s),lp=l(P," JObject"),Ga=t(P,"SPAN",{class:!0});var bE=n(Ga);cp=l(bE,"."),bE.forEach(s),ja=t(P,"SPAN",{class:!0});var wE=n(ja);rp=l(wE,"Parse"),wE.forEach(s),Ja=t(P,"SPAN",{class:!0});var mE=n(Ja);pp=l(mE,"("),mE.forEach(s),dp=l(P,"File"),xa=t(P,"SPAN",{class:!0});var yE=n(xa);ip=l(yE,"."),yE.forEach(s),Ra=t(P,"SPAN",{class:!0});var CE=n(Ra);up=l(CE,"ReadAllText"),CE.forEach(s),Va=t(P,"SPAN",{class:!0});var gE=n(Va);fp=l(gE,"("),gE.forEach(s),Ba=t(P,"SPAN",{class:!0});var DE=n(Ba);Ep=l(DE,'"./config/config.json"'),DE.forEach(s),Ma=t(P,"SPAN",{class:!0});var IE=n(Ma);hp=l(IE,")"),IE.forEach(s),qa=t(P,"SPAN",{class:!0});var OE=n(qa);vp=l(OE,")"),OE.forEach(s),Fa=t(P,"SPAN",{class:!0});var TE=n(Fa);kp=l(TE,";"),TE.forEach(s),P.forEach(s),Uo=t(hs,"CODELINE",{class:!0}),n(Uo).forEach(s),b=t(hs,"CODELINE",{class:!0});var x=n(b);Ha=t(x,"SPAN",{class:!0});var LE=n(Ha);Wa=t(LE,"SPAN",{class:!0});var GE=n(Wa);_p=l(GE,"string"),GE.forEach(s),LE.forEach(s),Np=l(x," auth   "),Ya=t(x,"SPAN",{class:!0});var jE=n(Ya);Pp=l(jE,"="),jE.forEach(s),Sp=l(x," config"),Qa=t(x,"SPAN",{class:!0});var JE=n(Qa);Ap=l(JE,"."),JE.forEach(s),ls=t(x,"SPAN",{class:!0});var Bf=n(ls);za=t(Bf,"SPAN",{class:!0});var xE=n(za);bp=l(xE,"Value"),xE.forEach(s),Pe=t(Bf,"SPAN",{class:!0});var lc=n(Pe);Xa=t(lc,"SPAN",{class:!0});var RE=n(Xa);wp=l(RE,"<"),RE.forEach(s),Ka=t(lc,"SPAN",{class:!0});var VE=n(Ka);mp=l(VE,"string"),VE.forEach(s),Ua=t(lc,"SPAN",{class:!0});var BE=n(Ua);yp=l(BE,">"),BE.forEach(s),lc.forEach(s),Bf.forEach(s),Za=t(x,"SPAN",{class:!0});var ME=n(Za);Cp=l(ME,"("),ME.forEach(s),$a=t(x,"SPAN",{class:!0});var qE=n($a);gp=l(qE,'"auth"'),qE.forEach(s),et=t(x,"SPAN",{class:!0});var FE=n(et);Dp=l(FE,")"),FE.forEach(s),st=t(x,"SPAN",{class:!0});var HE=n(st);Ip=l(HE,","),HE.forEach(s),x.forEach(s),y=t(hs,"CODELINE",{class:!0});var X=n(y);Op=l(X,"       prefix "),at=t(X,"SPAN",{class:!0});var WE=n(at);Tp=l(WE,"="),WE.forEach(s),Lp=l(X," config"),tt=t(X,"SPAN",{class:!0});var YE=n(tt);Gp=l(YE,"."),YE.forEach(s),cs=t(X,"SPAN",{class:!0});var Mf=n(cs);nt=t(Mf,"SPAN",{class:!0});var QE=n(nt);jp=l(QE,"Value"),QE.forEach(s),Se=t(Mf,"SPAN",{class:!0});var cc=n(Se);ot=t(cc,"SPAN",{class:!0});var zE=n(ot);Jp=l(zE,"<"),zE.forEach(s),lt=t(cc,"SPAN",{class:!0});var XE=n(lt);xp=l(XE,"string"),XE.forEach(s),ct=t(cc,"SPAN",{class:!0});var KE=n(ct);Rp=l(KE,">"),KE.forEach(s),cc.forEach(s),Mf.forEach(s),rt=t(X,"SPAN",{class:!0});var UE=n(rt);Vp=l(UE,"("),UE.forEach(s),pt=t(X,"SPAN",{class:!0});var ZE=n(pt);Bp=l(ZE,'"prefix"'),ZE.forEach(s),dt=t(X,"SPAN",{class:!0});var $E=n(dt);Mp=l($E,")"),$E.forEach(s),it=t(X,"SPAN",{class:!0});var eh=n(it);qp=l(eh,";"),eh.forEach(s),X.forEach(s),Zo=t(hs,"CODELINE",{class:!0}),n(Zo).forEach(s),E=t(hs,"CODELINE",{class:!0});var S=n(E);ut=t(S,"SPAN",{class:!0});var sh=n(ut);Fp=l(sh,"await"),sh.forEach(s),Hp=l(S," "),ft=t(S,"SPAN",{class:!0});var ah=n(ft);Wp=l(ah,"using"),ah.forEach(s),Yp=l(S," "),Et=t(S,"SPAN",{class:!0});var th=n(Et);ht=t(th,"SPAN",{class:!0});var nh=n(ht);Qp=l(nh,"var"),nh.forEach(s),th.forEach(s),zp=l(S," client "),vt=t(S,"SPAN",{class:!0});var oh=n(vt);Xp=l(oh,"="),oh.forEach(s),Kp=l(S," "),kt=t(S,"SPAN",{class:!0});var lh=n(kt);Up=l(lh,"new"),lh.forEach(s),Zp=l(S," "),_t=t(S,"SPAN",{class:!0});var ch=n(_t);$p=l(ch,"GuildedBotClient"),ch.forEach(s),Nt=t(S,"SPAN",{class:!0});var rh=n(Nt);ed=l(rh,"("),rh.forEach(s),sd=l(S,"auth"),Pt=t(S,"SPAN",{class:!0});var ph=n(Pt);ad=l(ph,")"),ph.forEach(s),St=t(S,"SPAN",{class:!0});var dh=n(St);td=l(dh,";"),dh.forEach(s),S.forEach(s),hs.forEach(s),PE.forEach(s),xf.forEach(s),Hl=u(r),At=t(r,"P",{});var ih=n(At);nd=l(ih,"You can now run your project, but as we can see, it doesn’t really do anything. But that’s because we are only creating our bot, not connecting to Guilded yet, which we are going to do in the next section."),ih.forEach(s),Wl=u(r),bt=t(r,"H2",{});var uh=n(bt);od=l(uh,"Connecting to Guilded"),uh.forEach(s),Yl=u(r),H=t(r,"P",{});var Ro=n(H);ld=l(Ro,"Method "),wt=t(Ro,"A",{href:!0});var fh=n(wt);cd=l(fh,"ConnectAsync"),fh.forEach(s),rd=l(Ro," is used to connect the client to Guilded. But once you use it, the bot will connect to Guilded and program will close seeing that it’s done. One of the ways to stop it from closing is to use "),$o=t(Ro,"CODE",{});var Eh=n($o);pd=l(Eh,"await Task.Delay(-1)"),Eh.forEach(s),dd=l(Ro,":"),Ro.forEach(s),Ql=u(r),Ae=t(r,"DIV",{class:!0});var qf=n(Ae);rs=t(qf,"HEADER",{class:!0});var Ff=n(rs);mt=t(Ff,"DIV",{class:!0});var hh=n(mt);id=l(hh,"C#"),hh.forEach(s),el=t(Ff,"SECTION",{class:!0}),n(el).forEach(s),Ff.forEach(s),yt=t(qf,"PRE",{class:!0});var vh=n(yt);j=t(vh,"CODE",{class:!0});var vs=n(j);te=t(vs,"CODELINE",{class:!0});var Pl=n(te);Ct=t(Pl,"SPAN",{class:!0});var kh=n(Ct);ud=l(kh,"using"),kh.forEach(s),fd=l(Pl," "),be=t(Pl,"SPAN",{class:!0});var rc=n(be);Ed=l(rc,"System"),gt=t(rc,"SPAN",{class:!0});var _h=n(gt);hd=l(_h,"."),_h.forEach(s),vd=l(rc,"IO"),rc.forEach(s),Dt=t(Pl,"SPAN",{class:!0});var Nh=n(Dt);kd=l(Nh,";"),Nh.forEach(s),Pl.forEach(s),ne=t(vs,"CODELINE",{class:!0});var Sl=n(ne);It=t(Sl,"SPAN",{class:!0});var Ph=n(It);_d=l(Ph,"using"),Ph.forEach(s),Nd=l(Sl," "),W=t(Sl,"SPAN",{class:!0});var Vo=n(W);Pd=l(Vo,"System"),Ot=t(Vo,"SPAN",{class:!0});var Sh=n(Ot);Sd=l(Sh,"."),Sh.forEach(s),Ad=l(Vo,"Threading"),Tt=t(Vo,"SPAN",{class:!0});var Ah=n(Tt);bd=l(Ah,"."),Ah.forEach(s),wd=l(Vo,"Tasks"),Vo.forEach(s),Lt=t(Sl,"SPAN",{class:!0});var bh=n(Lt);md=l(bh,";"),bh.forEach(s),Sl.forEach(s),sl=t(vs,"CODELINE",{class:!0}),n(sl).forEach(s),oe=t(vs,"CODELINE",{class:!0});var Al=n(oe);Gt=t(Al,"SPAN",{class:!0});var wh=n(Gt);yd=l(wh,"using"),wh.forEach(s),Cd=l(Al," "),jt=t(Al,"SPAN",{class:!0});var mh=n(jt);gd=l(mh,"Guilded"),mh.forEach(s),Jt=t(Al,"SPAN",{class:!0});var yh=n(Jt);Dd=l(yh,";"),yh.forEach(s),Al.forEach(s),al=t(vs,"CODELINE",{class:!0}),n(al).forEach(s),le=t(vs,"CODELINE",{class:!0});var bl=n(le);xt=t(bl,"SPAN",{class:!0});var Ch=n(xt);Id=l(Ch,"using"),Ch.forEach(s),Od=l(bl," "),we=t(bl,"SPAN",{class:!0});var pc=n(we);Td=l(pc,"Newtonsoft"),Rt=t(pc,"SPAN",{class:!0});var gh=n(Rt);Ld=l(gh,"."),gh.forEach(s),Gd=l(pc,"Json"),pc.forEach(s),Vt=t(bl,"SPAN",{class:!0});var Dh=n(Vt);jd=l(Dh,";"),Dh.forEach(s),bl.forEach(s),vs.forEach(s),vh.forEach(s),qf.forEach(s),zl=u(r),me=t(r,"DIV",{class:!0});var Hf=n(me);ps=t(Hf,"HEADER",{class:!0});var Wf=n(ps);Bt=t(Wf,"DIV",{class:!0});var Ih=n(Bt);Jd=l(Ih,"C#"),Ih.forEach(s),Mt=t(Wf,"SECTION",{class:!0});var Oh=n(Mt);ds=t(Oh,"DIV",{class:!0});var Yf=n(ds);qt=t(Yf,"SPAN",{class:!0});var Th=n(qt);xd=l(Th,"File: "),Th.forEach(s),Ft=t(Yf,"SPAN",{class:!0});var Lh=n(Ft);Rd=l(Lh,"Program.cs"),Lh.forEach(s),Yf.forEach(s),Oh.forEach(s),Wf.forEach(s),Ht=t(Hf,"PRE",{class:!0});var Gh=n(Ht);I=t(Gh,"CODE",{class:!0});var Je=n(I);Wt=t(Je,"CODELINE",{class:!0});var jh=n(Wt);Yt=t(jh,"SPAN",{class:!0});var Jh=n(Yt);Vd=l(Jh,"// Below static void Main()"),Jh.forEach(s),jh.forEach(s),N=t(Je,"CODELINE",{class:!0});var T=n(N);Qt=t(T,"SPAN",{class:!0});var xh=n(Qt);Bd=l(xh,"static"),xh.forEach(s),Md=l(T," "),zt=t(T,"SPAN",{class:!0});var Rh=n(zt);qd=l(Rh,"async"),Rh.forEach(s),Fd=l(T," "),Xt=t(T,"SPAN",{class:!0});var Vh=n(Xt);Hd=l(Vh,"Task"),Vh.forEach(s),Wd=l(T," "),Kt=t(T,"SPAN",{class:!0});var Bh=n(Kt);Yd=l(Bh,"RunAsync"),Bh.forEach(s),Ut=t(T,"SPAN",{class:!0});var Mh=n(Ut);Qd=l(Mh,"("),Mh.forEach(s),Zt=t(T,"SPAN",{class:!0});var qh=n(Zt);zd=l(qh,"GuildedBotClient"),qh.forEach(s),Xd=l(T," client"),$t=t(T,"SPAN",{class:!0});var Fh=n($t);Kd=l(Fh,")"),Fh.forEach(s),T.forEach(s),en=t(Je,"CODELINE",{class:!0});var Hh=n(en);sn=t(Hh,"SPAN",{class:!0});var Wh=n(sn);Ud=l(Wh,"{"),Wh.forEach(s),Hh.forEach(s),k=t(Je,"CODELINE",{class:!0});var C=n(k);Zd=l(C,"    "),an=t(C,"SPAN",{class:!0});var Yh=n(an);$d=l(Yh,"await"),Yh.forEach(s),ei=l(C," client"),tn=t(C,"SPAN",{class:!0});var Qh=n(tn);si=l(Qh,"."),Qh.forEach(s),nn=t(C,"SPAN",{class:!0});var zh=n(nn);ai=l(zh,"ConnectAsync"),zh.forEach(s),on=t(C,"SPAN",{class:!0});var Xh=n(on);ti=l(Xh,"("),Xh.forEach(s),ln=t(C,"SPAN",{class:!0});var Kh=n(ln);ni=l(Kh,")"),Kh.forEach(s),cn=t(C,"SPAN",{class:!0});var Uh=n(cn);oi=l(Uh,"."),Uh.forEach(s),rn=t(C,"SPAN",{class:!0});var Zh=n(rn);li=l(Zh,"ConfigureAwait"),Zh.forEach(s),pn=t(C,"SPAN",{class:!0});var $h=n(pn);ci=l($h,"("),$h.forEach(s),dn=t(C,"SPAN",{class:!0});var ev=n(dn);ri=l(ev,"false"),ev.forEach(s),un=t(C,"SPAN",{class:!0});var sv=n(un);pi=l(sv,")"),sv.forEach(s),fn=t(C,"SPAN",{class:!0});var av=n(fn);di=l(av,";"),av.forEach(s),C.forEach(s),is=t(Je,"CODELINE",{class:!0});var Qf=n(is);ii=l(Qf,"    "),En=t(Qf,"SPAN",{class:!0});var tv=n(En);ui=l(tv,"// Stop program from closing"),tv.forEach(s),Qf.forEach(s),w=t(Je,"CODELINE",{class:!0});var R=n(w);fi=l(R,"    "),hn=t(R,"SPAN",{class:!0});var nv=n(hn);Ei=l(nv,"await"),nv.forEach(s),hi=l(R," Task"),vn=t(R,"SPAN",{class:!0});var ov=n(vn);vi=l(ov,"."),ov.forEach(s),kn=t(R,"SPAN",{class:!0});var lv=n(kn);ki=l(lv,"Delay"),lv.forEach(s),_n=t(R,"SPAN",{class:!0});var cv=n(_n);_i=l(cv,"("),cv.forEach(s),Nn=t(R,"SPAN",{class:!0});var rv=n(Nn);Ni=l(rv,"-"),rv.forEach(s),Pn=t(R,"SPAN",{class:!0});var pv=n(Pn);Pi=l(pv,"1"),pv.forEach(s),Sn=t(R,"SPAN",{class:!0});var dv=n(Sn);Si=l(dv,")"),dv.forEach(s),An=t(R,"SPAN",{class:!0});var iv=n(An);Ai=l(iv,";"),iv.forEach(s),R.forEach(s),bn=t(Je,"CODELINE",{class:!0});var uv=n(bn);wn=t(uv,"SPAN",{class:!0});var fv=n(wn);bi=l(fv,"}"),fv.forEach(s),uv.forEach(s),Je.forEach(s),Gh.forEach(s),Hf.forEach(s),Xl=u(r),mn=t(r,"P",{});var Ev=n(mn);wi=l(Ev,"Now we can reference it in Main method:"),Ev.forEach(s),Kl=u(r),ye=t(r,"DIV",{class:!0});var zf=n(ye);yn=t(zf,"HEADER",{class:!0});var hv=n(yn);Cn=t(hv,"DIV",{class:!0});var vv=n(Cn);mi=l(vv,"C#"),vv.forEach(s),hv.forEach(s),gn=t(zf,"PRE",{class:!0});var kv=n(gn);us=t(kv,"CODE",{class:!0});var Xf=n(us);Dn=t(Xf,"CODELINE",{class:!0});var _v=n(Dn);In=t(_v,"SPAN",{class:!0});var Nv=n(In);yi=l(Nv,"// static void Main()"),Nv.forEach(s),_v.forEach(s),_=t(Xf,"CODELINE",{class:!0});var g=n(_);On=t(g,"SPAN",{class:!0});var Pv=n(On);Ci=l(Pv,"RunAsync"),Pv.forEach(s),Tn=t(g,"SPAN",{class:!0});var Sv=n(Tn);gi=l(Sv,"("),Sv.forEach(s),Di=l(g,"client"),Ln=t(g,"SPAN",{class:!0});var Av=n(Ln);Ii=l(Av,")"),Av.forEach(s),Gn=t(g,"SPAN",{class:!0});var bv=n(Gn);Oi=l(bv,"."),bv.forEach(s),jn=t(g,"SPAN",{class:!0});var wv=n(jn);Ti=l(wv,"GetAwaiter"),wv.forEach(s),Jn=t(g,"SPAN",{class:!0});var mv=n(Jn);Li=l(mv,"("),mv.forEach(s),xn=t(g,"SPAN",{class:!0});var yv=n(xn);Gi=l(yv,")"),yv.forEach(s),Rn=t(g,"SPAN",{class:!0});var Cv=n(Rn);ji=l(Cv,"."),Cv.forEach(s),Vn=t(g,"SPAN",{class:!0});var gv=n(Vn);Ji=l(gv,"GetResult"),gv.forEach(s),Bn=t(g,"SPAN",{class:!0});var Dv=n(Bn);xi=l(Dv,"("),Dv.forEach(s),Mn=t(g,"SPAN",{class:!0});var Iv=n(Mn);Ri=l(Iv,")"),Iv.forEach(s),qn=t(g,"SPAN",{class:!0});var Ov=n(qn);Vi=l(Ov,";"),Ov.forEach(s),g.forEach(s),Xf.forEach(s),kv.forEach(s),zf.forEach(s),Ul=u(r),Y=t(r,"P",{});var Bo=n(Y);Bi=l(Bo,"To see if connection between Guilded and the client are initiated, we can subscribe to "),Fn=t(Bo,"A",{href:!0});var Tv=n(Fn);Mi=l(Tv,"Prepared"),Tv.forEach(s),qi=l(Bo," or "),Hn=t(Bo,"A",{href:!0});var Lv=n(Hn);Fi=l(Lv,"Connected"),Lv.forEach(s),Hi=l(Bo," events:"),Bo.forEach(s),Zl=u(r),Ce=t(r,"DIV",{class:!0});var Kf=n(Ce);fs=t(Kf,"HEADER",{class:!0});var Uf=n(fs);Wn=t(Uf,"DIV",{class:!0});var Gv=n(Wn);Wi=l(Gv,"C#"),Gv.forEach(s),tl=t(Uf,"SECTION",{class:!0}),n(tl).forEach(s),Uf.forEach(s),Yn=t(Kf,"PRE",{class:!0});var jv=n(Yn);O=t(jv,"CODE",{class:!0});var xe=n(O);ce=t(xe,"CODELINE",{class:!0});var wl=n(ce);Qn=t(wl,"SPAN",{class:!0});var Jv=n(Qn);Yi=l(Jv,"using"),Jv.forEach(s),Qi=l(wl," "),zn=t(wl,"SPAN",{class:!0});var xv=n(zn);zi=l(xv,"System"),xv.forEach(s),Xn=t(wl,"SPAN",{class:!0});var Rv=n(Xn);Xi=l(Rv,";"),Rv.forEach(s),wl.forEach(s),re=t(xe,"CODELINE",{class:!0});var ml=n(re);Kn=t(ml,"SPAN",{class:!0});var Vv=n(Kn);Ki=l(Vv,"using"),Vv.forEach(s),Ui=l(ml," "),ge=t(ml,"SPAN",{class:!0});var dc=n(ge);Zi=l(dc,"System"),Un=t(dc,"SPAN",{class:!0});var Bv=n(Un);$i=l(Bv,"."),Bv.forEach(s),eu=l(dc,"IO"),dc.forEach(s),Zn=t(ml,"SPAN",{class:!0});var Mv=n(Zn);su=l(Mv,";"),Mv.forEach(s),ml.forEach(s),pe=t(xe,"CODELINE",{class:!0});var yl=n(pe);$n=t(yl,"SPAN",{class:!0});var qv=n($n);au=l(qv,"using"),qv.forEach(s),tu=l(yl," "),Q=t(yl,"SPAN",{class:!0});var Mo=n(Q);nu=l(Mo,"System"),eo=t(Mo,"SPAN",{class:!0});var Fv=n(eo);ou=l(Fv,"."),Fv.forEach(s),lu=l(Mo,"Threading"),so=t(Mo,"SPAN",{class:!0});var Hv=n(so);cu=l(Hv,"."),Hv.forEach(s),ru=l(Mo,"Tasks"),Mo.forEach(s),ao=t(yl,"SPAN",{class:!0});var Wv=n(ao);pu=l(Wv,";"),Wv.forEach(s),yl.forEach(s),nl=t(xe,"CODELINE",{class:!0}),n(nl).forEach(s),de=t(xe,"CODELINE",{class:!0});var Cl=n(de);to=t(Cl,"SPAN",{class:!0});var Yv=n(to);du=l(Yv,"using"),Yv.forEach(s),iu=l(Cl," "),no=t(Cl,"SPAN",{class:!0});var Qv=n(no);uu=l(Qv,"Guilded"),Qv.forEach(s),oo=t(Cl,"SPAN",{class:!0});var zv=n(oo);fu=l(zv,";"),zv.forEach(s),Cl.forEach(s),ol=t(xe,"CODELINE",{class:!0}),n(ol).forEach(s),ie=t(xe,"CODELINE",{class:!0});var gl=n(ie);lo=t(gl,"SPAN",{class:!0});var Xv=n(lo);Eu=l(Xv,"using"),Xv.forEach(s),hu=l(gl," "),De=t(gl,"SPAN",{class:!0});var ic=n(De);vu=l(ic,"Newtonsoft"),co=t(ic,"SPAN",{class:!0});var Kv=n(co);ku=l(Kv,"."),Kv.forEach(s),_u=l(ic,"Json"),ic.forEach(s),ro=t(gl,"SPAN",{class:!0});var Uv=n(ro);Nu=l(Uv,";"),Uv.forEach(s),gl.forEach(s),xe.forEach(s),jv.forEach(s),Kf.forEach(s),$l=u(r),Ie=t(r,"DIV",{class:!0});var Zf=n(Ie);po=t(Zf,"HEADER",{class:!0});var Zv=n(po);io=t(Zv,"DIV",{class:!0});var $v=n(io);Pu=l($v,"C#"),$v.forEach(s),Zv.forEach(s),uo=t(Zf,"PRE",{class:!0});var ek=n(uo);z=t(ek,"CODE",{class:!0});var qo=n(z);fo=t(qo,"CODELINE",{class:!0});var sk=n(fo);Eo=t(sk,"SPAN",{class:!0});var ak=n(Eo);Su=l(ak,"// Below `await using GuildedBotClient client = ...;`"),ak.forEach(s),sk.forEach(s),Oe=t(qo,"CODELINE",{class:!0});var uc=n(Oe);Au=l(uc,"client"),ho=t(uc,"SPAN",{class:!0});var tk=n(ho);bu=l(tk,"."),tk.forEach(s),wu=l(uc,"Prepared"),uc.forEach(s),J=t(qo,"CODELINE",{class:!0});var ks=n(J);mu=l(ks,"      "),vo=t(ks,"SPAN",{class:!0});var nk=n(vo);yu=l(nk,"."),nk.forEach(s),ko=t(ks,"SPAN",{class:!0});var ok=n(ko);Cu=l(ok,"Subscribe"),ok.forEach(s),_o=t(ks,"SPAN",{class:!0});var lk=n(_o);gu=l(lk,"("),lk.forEach(s),Du=l(ks,"me "),No=t(ks,"SPAN",{class:!0});var ck=n(No);Iu=l(ck,"=>"),ck.forEach(s),ks.forEach(s),v=t(qo,"CODELINE",{class:!0});var m=n(v);Ou=l(m,"          Console"),Po=t(m,"SPAN",{class:!0});var rk=n(Po);Tu=l(rk,"."),rk.forEach(s),So=t(m,"SPAN",{class:!0});var pk=n(So);Lu=l(pk,"WriteLine"),pk.forEach(s),Ao=t(m,"SPAN",{class:!0});var dk=n(Ao);Gu=l(dk,"("),dk.forEach(s),bo=t(m,"SPAN",{class:!0});var ik=n(bo);ju=l(ik,'"The bot is prepared.\\nLogged in as \\"{0}\\" with the ID \\"{1}\\""'),ik.forEach(s),wo=t(m,"SPAN",{class:!0});var uk=n(wo);Ju=l(uk,","),uk.forEach(s),xu=l(m," me"),mo=t(m,"SPAN",{class:!0});var fk=n(mo);Ru=l(fk,"."),fk.forEach(s),Vu=l(m,"Name"),yo=t(m,"SPAN",{class:!0});var Ek=n(yo);Bu=l(Ek,","),Ek.forEach(s),Mu=l(m," me"),Co=t(m,"SPAN",{class:!0});var hk=n(Co);qu=l(hk,"."),hk.forEach(s),Fu=l(m,"Id"),go=t(m,"SPAN",{class:!0});var vk=n(go);Hu=l(vk,")"),vk.forEach(s),m.forEach(s),Te=t(qo,"CODELINE",{class:!0});var fc=n(Te);Wu=l(fc,"      "),Do=t(fc,"SPAN",{class:!0});var kk=n(Do);Yu=l(kk,")"),kk.forEach(s),Io=t(fc,"SPAN",{class:!0});var _k=n(Io);Qu=l(_k,";"),_k.forEach(s),fc.forEach(s),qo.forEach(s),ek.forEach(s),Zf.forEach(s),ec=u(r),h=t(r,"P",{});var A=n(h);zu=l(A,"The main difference is that "),ll=t(A,"CODE",{});var Nk=n(ll);Xu=l(Nk,"Connected"),Nk.forEach(s),Ku=l(A," gets connected once the bot is online and can be functional, while "),cl=t(A,"CODE",{});var Pk=n(cl);Uu=l(Pk,"Prepared"),Pk.forEach(s),Zu=l(A," is called once the bot is connected and gets additional information, such as "),rl=t(A,"CODE",{});var Sk=n(rl);$u=l(Sk,"client.Me"),Sk.forEach(s),ef=l(A,". If "),pl=t(A,"CODE",{});var Ak=n(pl);sf=l(Ak,"Connected"),Ak.forEach(s),af=l(A," gets called before "),dl=t(A,"CODE",{});var bk=n(dl);tf=l(bk,"Prepared"),bk.forEach(s),nf=l(A,", the "),il=t(A,"CODE",{});var wk=n(il);of=l(wk,"client.Me"),wk.forEach(s),lf=l(A," property will always be "),ul=t(A,"CODE",{});var mk=n(ul);cf=l(mk,"null"),mk.forEach(s),rf=l(A,"."),A.forEach(s),sc=u(r),Le=t(r,"P",{});var Ec=n(Le);pf=l(Ec,"Once the bot successfully connects and does everything it needs, you will be able to see "),fl=t(Ec,"Q",{});var yk=n(fl);df=l(yk,"The bot is prepared."),yk.forEach(s),uf=l(Ec," in the console."),Ec.forEach(s),ac=u(r),Ge=t(r,"P",{});var hc=n(Ge);ff=l(hc,"The bot won’t do anything apart from connecting to Guilded. In "),Oo=t(hc,"A",{href:!0});var Ck=n(Oo);Ef=l(Ck,"Powering up the bot"),Ck.forEach(s),hf=l(hc," document, we are going to give functionality to our bot with text commands."),hc.forEach(s),this.h()},h(){c(Re,"href","https://www.nuget.org/packages/Guilded.NET.Templates/"),c(Re,"rel","nofollow"),c(Ve,"href","https://github.com/Guilded-NET/Guilded.NET.Templates"),c(Ve,"rel","nofollow"),c(bs,"class","code-block lang"),c(ms,"class","code-block-meta-prop key"),c(ys,"class","code-block-meta-prop value"),c(Me,"class","code-block-meta-prop container"),c(ws,"class","code-block meta"),c(Be,"class","code-block header"),c(Ds,"class","token punctuation"),c(gs,"class","code-block line"),c(Is,"class","token property"),c(Os,"class","token operator"),c(Ts,"class","token string"),c(Ls,"class","token punctuation"),c(L,"class","code-block line"),c(Gs,"class","token property"),c(js,"class","token operator"),c(Js,"class","token string"),c(B,"class","code-block line"),c(Rs,"class","token punctuation"),c(xs,"class","code-block line"),c(U,"class","code-block code-container language-json json"),c(Cs,"class","code-block code-wrapper language-json json"),c(he,"class","code-block container"),c(Bs,"class","code-block lang"),c(qs,"class","code-block-meta-prop key"),c(Fs,"class","code-block-meta-prop value"),c(Fe,"class","code-block-meta-prop container"),c(Ms,"class","code-block meta"),c(qe,"class","code-block header"),c(Ys,"class","token comment"),c(Ws,"class","code-block line"),c(zs,"class","token punctuation"),c(We,"class","token tag"),c(Xs,"class","token punctuation"),c(He,"class","token tag"),c(Qs,"class","code-block line"),c(Ks,"class","token punctuation"),c(Qe,"class","token tag"),c(Us,"class","token attr-name"),c(Zs,"class","token punctuation attr-equals"),c($s,"class","token punctuation"),c(ea,"class","token punctuation"),c(Z,"class","token attr-value"),c(sa,"class","token punctuation"),c(M,"class","token tag"),c(Ye,"class","code-block line"),c(aa,"class","token punctuation"),c(Xe,"class","token tag"),c(ta,"class","token punctuation"),c(ze,"class","token tag"),c(na,"class","token punctuation"),c(Ue,"class","token tag"),c(oa,"class","token punctuation"),c(Ke,"class","token tag"),c($,"class","code-block line"),c(la,"class","token punctuation"),c(es,"class","token tag"),c(ca,"class","token punctuation"),c($e,"class","token tag"),c(Ze,"class","code-block line"),c(pa,"class","token punctuation"),c(as,"class","token tag"),c(da,"class","token punctuation"),c(ss,"class","token tag"),c(ra,"class","code-block line"),c(ua,"class","token comment"),c(ia,"class","code-block line"),c(D,"class","code-block code-container language-xml xml"),c(Hs,"class","code-block code-wrapper language-xml xml"),c(ve,"class","code-block container"),c(ha,"class","code-block lang"),c(zo,"class","code-block meta"),c(ts,"class","code-block header"),c(ka,"class","token keyword"),c(_a,"class","token punctuation"),c(_e,"class","token namespace"),c(Na,"class","token punctuation"),c(ee,"class","code-block line inserted"),c(Xo,"class","code-block line"),c(Pa,"class","token keyword"),c(Sa,"class","token namespace"),c(Aa,"class","token punctuation"),c(se,"class","code-block line inserted"),c(Ko,"class","code-block line"),c(ba,"class","token keyword"),c(wa,"class","token punctuation"),c(ma,"class","token punctuation"),c(F,"class","token namespace"),c(ya,"class","token punctuation"),c(ae,"class","code-block line inserted"),c(q,"class","code-block code-container language-csharp csharp"),c(va,"class","code-block code-wrapper language-csharp csharp"),c(ke,"class","code-block container"),c(Ca,"class","code-block lang"),c(Da,"class","code-block-meta-prop key"),c(Ia,"class","code-block-meta-prop value"),c(os,"class","code-block-meta-prop container"),c(ga,"class","code-block meta"),c(ns,"class","code-block header"),c(Ta,"class","token class-name"),c(La,"class","token operator"),c(Ga,"class","token punctuation"),c(ja,"class","token function"),c(Ja,"class","token punctuation"),c(xa,"class","token punctuation"),c(Ra,"class","token function"),c(Va,"class","token punctuation"),c(Ba,"class","token string"),c(Ma,"class","token punctuation"),c(qa,"class","token punctuation"),c(Fa,"class","token punctuation"),c(f,"class","code-block line"),c(Uo,"class","code-block line"),c(Wa,"class","token keyword"),c(Ha,"class","token class-name"),c(Ya,"class","token operator"),c(Qa,"class","token punctuation"),c(za,"class","token function"),c(Xa,"class","token punctuation"),c(Ka,"class","token keyword"),c(Ua,"class","token punctuation"),c(Pe,"class","token generic class-name"),c(ls,"class","token generic-method"),c(Za,"class","token punctuation"),c($a,"class","token string"),c(et,"class","token punctuation"),c(st,"class","token punctuation"),c(b,"class","code-block line"),c(at,"class","token operator"),c(tt,"class","token punctuation"),c(nt,"class","token function"),c(ot,"class","token punctuation"),c(lt,"class","token keyword"),c(ct,"class","token punctuation"),c(Se,"class","token generic class-name"),c(cs,"class","token generic-method"),c(rt,"class","token punctuation"),c(pt,"class","token string"),c(dt,"class","token punctuation"),c(it,"class","token punctuation"),c(y,"class","code-block line"),c(Zo,"class","code-block line"),c(ut,"class","token keyword"),c(ft,"class","token keyword"),c(ht,"class","token keyword"),c(Et,"class","token class-name"),c(vt,"class","token operator"),c(kt,"class","token keyword"),c(_t,"class","token constructor-invocation class-name"),c(Nt,"class","token punctuation"),c(Pt,"class","token punctuation"),c(St,"class","token punctuation"),c(E,"class","code-block line"),c(G,"class","code-block code-container language-csharp csharp"),c(Oa,"class","code-block code-wrapper language-csharp csharp"),c(Ne,"class","code-block container"),c(wt,"href","/"),c(mt,"class","code-block lang"),c(el,"class","code-block meta"),c(rs,"class","code-block header"),c(Ct,"class","token keyword"),c(gt,"class","token punctuation"),c(be,"class","token namespace"),c(Dt,"class","token punctuation"),c(te,"class","code-block line"),c(It,"class","token keyword"),c(Ot,"class","token punctuation"),c(Tt,"class","token punctuation"),c(W,"class","token namespace"),c(Lt,"class","token punctuation"),c(ne,"class","code-block line inserted"),c(sl,"class","code-block line"),c(Gt,"class","token keyword"),c(jt,"class","token namespace"),c(Jt,"class","token punctuation"),c(oe,"class","code-block line"),c(al,"class","code-block line"),c(xt,"class","token keyword"),c(Rt,"class","token punctuation"),c(we,"class","token namespace"),c(Vt,"class","token punctuation"),c(le,"class","code-block line"),c(j,"class","code-block code-container language-csharp csharp"),c(yt,"class","code-block code-wrapper language-csharp csharp"),c(Ae,"class","code-block container"),c(Bt,"class","code-block lang"),c(qt,"class","code-block-meta-prop key"),c(Ft,"class","code-block-meta-prop value"),c(ds,"class","code-block-meta-prop container"),c(Mt,"class","code-block meta"),c(ps,"class","code-block header"),c(Yt,"class","token comment"),c(Wt,"class","code-block line"),c(Qt,"class","token keyword"),c(zt,"class","token keyword"),c(Xt,"class","token return-type class-name"),c(Kt,"class","token function"),c(Ut,"class","token punctuation"),c(Zt,"class","token class-name"),c($t,"class","token punctuation"),c(N,"class","code-block line"),c(sn,"class","token punctuation"),c(en,"class","code-block line"),c(an,"class","token keyword"),c(tn,"class","token punctuation"),c(nn,"class","token function"),c(on,"class","token punctuation"),c(ln,"class","token punctuation"),c(cn,"class","token punctuation"),c(rn,"class","token function"),c(pn,"class","token punctuation"),c(dn,"class","token boolean"),c(un,"class","token punctuation"),c(fn,"class","token punctuation"),c(k,"class","code-block line"),c(En,"class","token comment"),c(is,"class","code-block line"),c(hn,"class","token keyword"),c(vn,"class","token punctuation"),c(kn,"class","token function"),c(_n,"class","token punctuation"),c(Nn,"class","token operator"),c(Pn,"class","token number"),c(Sn,"class","token punctuation"),c(An,"class","token punctuation"),c(w,"class","code-block line"),c(wn,"class","token punctuation"),c(bn,"class","code-block line"),c(I,"class","code-block code-container language-csharp csharp"),c(Ht,"class","code-block code-wrapper language-csharp csharp"),c(me,"class","code-block container"),c(Cn,"class","code-block lang"),c(yn,"class","code-block header"),c(In,"class","token comment"),c(Dn,"class","code-block line"),c(On,"class","token function"),c(Tn,"class","token punctuation"),c(Ln,"class","token punctuation"),c(Gn,"class","token punctuation"),c(jn,"class","token function"),c(Jn,"class","token punctuation"),c(xn,"class","token punctuation"),c(Rn,"class","token punctuation"),c(Vn,"class","token function"),c(Bn,"class","token punctuation"),c(Mn,"class","token punctuation"),c(qn,"class","token punctuation"),c(_,"class","code-block line"),c(us,"class","code-block code-container language-csharp csharp"),c(gn,"class","code-block code-wrapper language-csharp csharp"),c(ye,"class","code-block container"),c(Fn,"href","/"),c(Hn,"href","/"),c(Wn,"class","code-block lang"),c(tl,"class","code-block meta"),c(fs,"class","code-block header"),c(Qn,"class","token keyword"),c(zn,"class","token namespace"),c(Xn,"class","token punctuation"),c(ce,"class","code-block line inserted"),c(Kn,"class","token keyword"),c(Un,"class","token punctuation"),c(ge,"class","token namespace"),c(Zn,"class","token punctuation"),c(re,"class","code-block line"),c($n,"class","token keyword"),c(eo,"class","token punctuation"),c(so,"class","token punctuation"),c(Q,"class","token namespace"),c(ao,"class","token punctuation"),c(pe,"class","code-block line"),c(nl,"class","code-block line"),c(to,"class","token keyword"),c(no,"class","token namespace"),c(oo,"class","token punctuation"),c(de,"class","code-block line"),c(ol,"class","code-block line"),c(lo,"class","token keyword"),c(co,"class","token punctuation"),c(De,"class","token namespace"),c(ro,"class","token punctuation"),c(ie,"class","code-block line"),c(O,"class","code-block code-container language-csharp csharp"),c(Yn,"class","code-block code-wrapper language-csharp csharp"),c(Ce,"class","code-block container"),c(io,"class","code-block lang"),c(po,"class","code-block header"),c(Eo,"class","token comment"),c(fo,"class","code-block line"),c(ho,"class","token punctuation"),c(Oe,"class","code-block line"),c(vo,"class","token punctuation"),c(ko,"class","token function"),c(_o,"class","token punctuation"),c(No,"class","token operator"),c(J,"class","code-block line"),c(Po,"class","token punctuation"),c(So,"class","token function"),c(Ao,"class","token punctuation"),c(bo,"class","token string"),c(wo,"class","token punctuation"),c(mo,"class","token punctuation"),c(yo,"class","token punctuation"),c(Co,"class","token punctuation"),c(go,"class","token punctuation"),c(v,"class","code-block line"),c(Do,"class","token punctuation"),c(Io,"class","token punctuation"),c(Te,"class","code-block line"),c(z,"class","code-block code-container language-csharp csharp"),c(uo,"class","code-block code-wrapper language-csharp csharp"),c(Ie,"class","code-block container"),c(Oo,"href","/docs/powering-bot")},m(r,p){d(r,ue,p),e(ue,vc),d(r,Dl,p),d(r,_s,p),e(_s,kc),d(r,Il,p),d(r,Ns,p),e(Ns,_c),d(r,Ol,p),d(r,Ps,p),e(Ps,K),e(K,Nc),e(K,Re),e(Re,Pc),e(K,Sc),e(K,Fo),e(Fo,Ac),e(K,bc),d(r,Tl,p),d(r,fe,p),e(fe,wc),e(fe,Ve),e(Ve,Ho),e(Ho,mc),e(fe,yc),d(r,Ll,p),d(r,Ss,p),e(Ss,Cc),d(r,Gl,p),d(r,As,p),e(As,gc),d(r,jl,p),d(r,Ee,p),e(Ee,Dc),e(Ee,Wo),e(Wo,Ic),e(Ee,Oc),d(r,Jl,p),d(r,V,p),e(V,Tc),e(V,Yo),e(Yo,Lc),e(V,Gc),e(V,Qo),e(Qo,jc),e(V,Jc),d(r,xl,p),d(r,he,p),e(he,Be),e(Be,bs),e(bs,xc),e(Be,ws),e(ws,Me),e(Me,ms),e(ms,Rc),e(Me,ys),e(ys,Vc),e(he,Cs),e(Cs,U),e(U,gs),e(gs,Ds),e(Ds,Bc),e(U,L),e(L,Mc),e(L,Is),e(Is,qc),e(L,Os),e(Os,Fc),e(L,Hc),e(L,Ts),e(Ts,Wc),e(L,Ls),e(Ls,Yc),e(U,B),e(B,Qc),e(B,Gs),e(Gs,zc),e(B,js),e(js,Xc),e(B,Kc),e(B,Js),e(Js,Uc),e(U,xs),e(xs,Rs),e(Rs,Zc),d(r,Rl,p),d(r,Vs,p),e(Vs,$c),d(r,Vl,p),d(r,ve,p),e(ve,qe),e(qe,Bs),e(Bs,er),e(qe,Ms),e(Ms,Fe),e(Fe,qs),e(qs,sr),e(Fe,Fs),e(Fs,ar),e(ve,Hs),e(Hs,D),e(D,Ws),e(Ws,Ys),e(Ys,tr),e(D,Qs),e(Qs,He),e(He,We),e(We,zs),e(zs,nr),e(We,or),e(He,Xs),e(Xs,lr),e(D,Ye),e(Ye,cr),e(Ye,M),e(M,Qe),e(Qe,Ks),e(Ks,rr),e(Qe,pr),e(M,dr),e(M,Us),e(Us,ir),e(M,Z),e(Z,Zs),e(Zs,ur),e(Z,$s),e($s,fr),e(Z,Er),e(Z,ea),e(ea,hr),e(M,sa),e(sa,vr),e(D,$),e($,kr),e($,ze),e(ze,Xe),e(Xe,aa),e(aa,_r),e(Xe,Nr),e(ze,ta),e(ta,Pr),e($,Sr),e($,Ke),e(Ke,Ue),e(Ue,na),e(na,Ar),e(Ue,br),e(Ke,oa),e(oa,wr),e(D,Ze),e(Ze,mr),e(Ze,$e),e($e,es),e(es,la),e(la,yr),e(es,Cr),e($e,ca),e(ca,gr),e(D,ra),e(ra,ss),e(ss,as),e(as,pa),e(pa,Dr),e(as,Ir),e(ss,da),e(da,Or),e(D,ia),e(ia,ua),e(ua,Tr),d(r,Bl,p),d(r,fa,p),e(fa,Lr),d(r,Ml,p),d(r,Ea,p),e(Ea,Gr),d(r,ql,p),d(r,ke,p),e(ke,ts),e(ts,ha),e(ha,jr),e(ts,zo),e(ke,va),e(va,q),e(q,ee),e(ee,ka),e(ka,Jr),e(ee,xr),e(ee,_e),e(_e,Rr),e(_e,_a),e(_a,Vr),e(_e,Br),e(ee,Na),e(Na,Mr),e(q,Xo),e(q,se),e(se,Pa),e(Pa,qr),e(se,Fr),e(se,Sa),e(Sa,Hr),e(se,Aa),e(Aa,Wr),e(q,Ko),e(q,ae),e(ae,ba),e(ba,Yr),e(ae,Qr),e(ae,F),e(F,zr),e(F,wa),e(wa,Xr),e(F,Kr),e(F,ma),e(ma,Ur),e(F,Zr),e(ae,ya),e(ya,$r),d(r,Fl,p),d(r,Ne,p),e(Ne,ns),e(ns,Ca),e(Ca,ep),e(ns,ga),e(ga,os),e(os,Da),e(Da,sp),e(os,Ia),e(Ia,ap),e(Ne,Oa),e(Oa,G),e(G,f),e(f,Ta),e(Ta,tp),e(f,np),e(f,La),e(La,op),e(f,lp),e(f,Ga),e(Ga,cp),e(f,ja),e(ja,rp),e(f,Ja),e(Ja,pp),e(f,dp),e(f,xa),e(xa,ip),e(f,Ra),e(Ra,up),e(f,Va),e(Va,fp),e(f,Ba),e(Ba,Ep),e(f,Ma),e(Ma,hp),e(f,qa),e(qa,vp),e(f,Fa),e(Fa,kp),e(G,Uo),e(G,b),e(b,Ha),e(Ha,Wa),e(Wa,_p),e(b,Np),e(b,Ya),e(Ya,Pp),e(b,Sp),e(b,Qa),e(Qa,Ap),e(b,ls),e(ls,za),e(za,bp),e(ls,Pe),e(Pe,Xa),e(Xa,wp),e(Pe,Ka),e(Ka,mp),e(Pe,Ua),e(Ua,yp),e(b,Za),e(Za,Cp),e(b,$a),e($a,gp),e(b,et),e(et,Dp),e(b,st),e(st,Ip),e(G,y),e(y,Op),e(y,at),e(at,Tp),e(y,Lp),e(y,tt),e(tt,Gp),e(y,cs),e(cs,nt),e(nt,jp),e(cs,Se),e(Se,ot),e(ot,Jp),e(Se,lt),e(lt,xp),e(Se,ct),e(ct,Rp),e(y,rt),e(rt,Vp),e(y,pt),e(pt,Bp),e(y,dt),e(dt,Mp),e(y,it),e(it,qp),e(G,Zo),e(G,E),e(E,ut),e(ut,Fp),e(E,Hp),e(E,ft),e(ft,Wp),e(E,Yp),e(E,Et),e(Et,ht),e(ht,Qp),e(E,zp),e(E,vt),e(vt,Xp),e(E,Kp),e(E,kt),e(kt,Up),e(E,Zp),e(E,_t),e(_t,$p),e(E,Nt),e(Nt,ed),e(E,sd),e(E,Pt),e(Pt,ad),e(E,St),e(St,td),d(r,Hl,p),d(r,At,p),e(At,nd),d(r,Wl,p),d(r,bt,p),e(bt,od),d(r,Yl,p),d(r,H,p),e(H,ld),e(H,wt),e(wt,cd),e(H,rd),e(H,$o),e($o,pd),e(H,dd),d(r,Ql,p),d(r,Ae,p),e(Ae,rs),e(rs,mt),e(mt,id),e(rs,el),e(Ae,yt),e(yt,j),e(j,te),e(te,Ct),e(Ct,ud),e(te,fd),e(te,be),e(be,Ed),e(be,gt),e(gt,hd),e(be,vd),e(te,Dt),e(Dt,kd),e(j,ne),e(ne,It),e(It,_d),e(ne,Nd),e(ne,W),e(W,Pd),e(W,Ot),e(Ot,Sd),e(W,Ad),e(W,Tt),e(Tt,bd),e(W,wd),e(ne,Lt),e(Lt,md),e(j,sl),e(j,oe),e(oe,Gt),e(Gt,yd),e(oe,Cd),e(oe,jt),e(jt,gd),e(oe,Jt),e(Jt,Dd),e(j,al),e(j,le),e(le,xt),e(xt,Id),e(le,Od),e(le,we),e(we,Td),e(we,Rt),e(Rt,Ld),e(we,Gd),e(le,Vt),e(Vt,jd),d(r,zl,p),d(r,me,p),e(me,ps),e(ps,Bt),e(Bt,Jd),e(ps,Mt),e(Mt,ds),e(ds,qt),e(qt,xd),e(ds,Ft),e(Ft,Rd),e(me,Ht),e(Ht,I),e(I,Wt),e(Wt,Yt),e(Yt,Vd),e(I,N),e(N,Qt),e(Qt,Bd),e(N,Md),e(N,zt),e(zt,qd),e(N,Fd),e(N,Xt),e(Xt,Hd),e(N,Wd),e(N,Kt),e(Kt,Yd),e(N,Ut),e(Ut,Qd),e(N,Zt),e(Zt,zd),e(N,Xd),e(N,$t),e($t,Kd),e(I,en),e(en,sn),e(sn,Ud),e(I,k),e(k,Zd),e(k,an),e(an,$d),e(k,ei),e(k,tn),e(tn,si),e(k,nn),e(nn,ai),e(k,on),e(on,ti),e(k,ln),e(ln,ni),e(k,cn),e(cn,oi),e(k,rn),e(rn,li),e(k,pn),e(pn,ci),e(k,dn),e(dn,ri),e(k,un),e(un,pi),e(k,fn),e(fn,di),e(I,is),e(is,ii),e(is,En),e(En,ui),e(I,w),e(w,fi),e(w,hn),e(hn,Ei),e(w,hi),e(w,vn),e(vn,vi),e(w,kn),e(kn,ki),e(w,_n),e(_n,_i),e(w,Nn),e(Nn,Ni),e(w,Pn),e(Pn,Pi),e(w,Sn),e(Sn,Si),e(w,An),e(An,Ai),e(I,bn),e(bn,wn),e(wn,bi),d(r,Xl,p),d(r,mn,p),e(mn,wi),d(r,Kl,p),d(r,ye,p),e(ye,yn),e(yn,Cn),e(Cn,mi),e(ye,gn),e(gn,us),e(us,Dn),e(Dn,In),e(In,yi),e(us,_),e(_,On),e(On,Ci),e(_,Tn),e(Tn,gi),e(_,Di),e(_,Ln),e(Ln,Ii),e(_,Gn),e(Gn,Oi),e(_,jn),e(jn,Ti),e(_,Jn),e(Jn,Li),e(_,xn),e(xn,Gi),e(_,Rn),e(Rn,ji),e(_,Vn),e(Vn,Ji),e(_,Bn),e(Bn,xi),e(_,Mn),e(Mn,Ri),e(_,qn),e(qn,Vi),d(r,Ul,p),d(r,Y,p),e(Y,Bi),e(Y,Fn),e(Fn,Mi),e(Y,qi),e(Y,Hn),e(Hn,Fi),e(Y,Hi),d(r,Zl,p),d(r,Ce,p),e(Ce,fs),e(fs,Wn),e(Wn,Wi),e(fs,tl),e(Ce,Yn),e(Yn,O),e(O,ce),e(ce,Qn),e(Qn,Yi),e(ce,Qi),e(ce,zn),e(zn,zi),e(ce,Xn),e(Xn,Xi),e(O,re),e(re,Kn),e(Kn,Ki),e(re,Ui),e(re,ge),e(ge,Zi),e(ge,Un),e(Un,$i),e(ge,eu),e(re,Zn),e(Zn,su),e(O,pe),e(pe,$n),e($n,au),e(pe,tu),e(pe,Q),e(Q,nu),e(Q,eo),e(eo,ou),e(Q,lu),e(Q,so),e(so,cu),e(Q,ru),e(pe,ao),e(ao,pu),e(O,nl),e(O,de),e(de,to),e(to,du),e(de,iu),e(de,no),e(no,uu),e(de,oo),e(oo,fu),e(O,ol),e(O,ie),e(ie,lo),e(lo,Eu),e(ie,hu),e(ie,De),e(De,vu),e(De,co),e(co,ku),e(De,_u),e(ie,ro),e(ro,Nu),d(r,$l,p),d(r,Ie,p),e(Ie,po),e(po,io),e(io,Pu),e(Ie,uo),e(uo,z),e(z,fo),e(fo,Eo),e(Eo,Su),e(z,Oe),e(Oe,Au),e(Oe,ho),e(ho,bu),e(Oe,wu),e(z,J),e(J,mu),e(J,vo),e(vo,yu),e(J,ko),e(ko,Cu),e(J,_o),e(_o,gu),e(J,Du),e(J,No),e(No,Iu),e(z,v),e(v,Ou),e(v,Po),e(Po,Tu),e(v,So),e(So,Lu),e(v,Ao),e(Ao,Gu),e(v,bo),e(bo,ju),e(v,wo),e(wo,Ju),e(v,xu),e(v,mo),e(mo,Ru),e(v,Vu),e(v,yo),e(yo,Bu),e(v,Mu),e(v,Co),e(Co,qu),e(v,Fu),e(v,go),e(go,Hu),e(z,Te),e(Te,Wu),e(Te,Do),e(Do,Yu),e(Te,Io),e(Io,Qu),d(r,ec,p),d(r,h,p),e(h,zu),e(h,ll),e(ll,Xu),e(h,Ku),e(h,cl),e(cl,Uu),e(h,Zu),e(h,rl),e(rl,$u),e(h,ef),e(h,pl),e(pl,sf),e(h,af),e(h,dl),e(dl,tf),e(h,nf),e(h,il),e(il,of),e(h,lf),e(h,ul),e(ul,cf),e(h,rf),d(r,sc,p),d(r,Le,p),e(Le,pf),e(Le,fl),e(fl,df),e(Le,uf),d(r,ac,p),d(r,Ge,p),e(Ge,ff),e(Ge,Oo),e(Oo,Ef),e(Ge,hf)},p:$f,i:$f,o:$f,d(r){r&&s(ue),r&&s(Dl),r&&s(_s),r&&s(Il),r&&s(Ns),r&&s(Ol),r&&s(Ps),r&&s(Tl),r&&s(fe),r&&s(Ll),r&&s(Ss),r&&s(Gl),r&&s(As),r&&s(jl),r&&s(Ee),r&&s(Jl),r&&s(V),r&&s(xl),r&&s(he),r&&s(Rl),r&&s(Vs),r&&s(Vl),r&&s(ve),r&&s(Bl),r&&s(fa),r&&s(Ml),r&&s(Ea),r&&s(ql),r&&s(ke),r&&s(Fl),r&&s(Ne),r&&s(Hl),r&&s(At),r&&s(Wl),r&&s(bt),r&&s(Yl),r&&s(H),r&&s(Ql),r&&s(Ae),r&&s(zl),r&&s(me),r&&s(Xl),r&&s(mn),r&&s(Kl),r&&s(ye),r&&s(Ul),r&&s(Y),r&&s(Zl),r&&s(Ce),r&&s($l),r&&s(Ie),r&&s(ec),r&&s(h),r&&s(sc),r&&s(Le),r&&s(ac),r&&s(Ge)}}}const Gk={name:"Developing bots",icon:"play",priority:1,category:"Getting Started",tags:["Getting Started","Docs","C#"]};class jk extends Dk{constructor(ue){super(),Ik(this,ue,null,Tk,Ok,{})}}export{jk as default,Gk as metadata};
